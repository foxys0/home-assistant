#ALARM by light (-20min)
- action:
  - data:
      entity_id: script.fade_in
    service: script.turn_on
  alias: "Morning alarm by light"
  condition:
    - condition: state
      entity_id: input_boolean.alarm_by_light_toggle
      state: 'on'
    - condition: template
      value_template: '{{ (as_timestamp(now()) + 1200) | timestamp_custom("%H:%M") == states.input_select.alarm.state }}'
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 0

#ALARM by voice
- action:
  - data:
      entity_id: script.google_home_on
    service: script.turn_on
  - data:
      entity_id: media_player.mary_and_max
      message: "Wake up you lazy bitches"
      language: "en-uk"
    service: tts.google_say
  - delay: 00:01:00
  - data:
      entity_id: script.google_home_off
    service: script.turn_on
  alias: "Morning alarm"
  condition:
    - condition: state
      entity_id: input_boolean.alarm_toggle
      state: 'on'
    - condition: template
      value_template: '{{ now().strftime("%H:%M") == states.input_select.alarm.state }}'
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 0

#ARLO ARM / DISARM by calendar
- action:
  - data_template:
      entity_id: script.arlo_{{ states.calendar.camera.attributes.message | replace("#camera","") }}
    service: script.turn_on
  alias: Camera by calendar
  condition: []
  id: camera_by_calendar
  trigger:
  - entity_id: calendar.camera
    from: 'off'
    platform: state
    to: 'on'

#ARLO ARM
- action:
  - data:
      entity_id: script.arlo_arm
    service: script.turn_on
  alias: Camera ARM by input
  condition:
    - condition: state
      entity_id: script.arlo_arm
      state: 'off'
  id: camera_arm_by_input
  trigger:
  - entity_id: input_boolean.camera_toggle
    from: 'off'
    platform: state
    to: 'on'

#ARLO DISARM
- action:
  - data:
      entity_id: script.arlo_disarm
    service: script.turn_on
  alias: Camera DISARM by input
  condition:
    - condition: state
      entity_id: script.arlo_disarm
      state: 'off'
  id: camera_disarm_by_input
  trigger:
  - entity_id: input_boolean.camera_toggle
    from: 'on'
    platform: state
    to: 'off'

#- action:
#  - data:
#      visible: true
#    service: group.set_visibility
#    entity_id: group.alarm
#  - data:
#      visible: true
#    service: group.set_visibility
#    entity_id: group.buttons
#  alias: "Groups - SHOW"
#  condition:
#    - condition: time
#      after: '20:00:00'
#      before: '09:00:00'
#  trigger:
#    - platform: time
#      minutes: '/1'
#      seconds: 0

#- action:
#  - data:
#      visible: false
#    service: group.set_visibility
#    entity_id: group.alarm
#  - data:
#      visible: false
#    service: group.set_visibility
#    entity_id: group.buttons
#  alias: "Groups - HIDE"
#  condition:
#    - condition: time
#      after: '09:00:00'
#      before: '20:00:00'
#  trigger:
#    - platform: time
#      minutes: '/1'
#      seconds: 0

#ENABLE LOCATION by hallway light
- action:
  - data:
      entity_id: input_boolean.disable_location
    service: input_boolean.turn_off
  alias: Enable location by hallway
  condition:
    - condition: state
      entity_id: input_boolean.disable_location
      state: 'on'
  id: enable_location_by_hallway
  trigger:
  - entity_id: light.hallway
    platform: state
    from: 'off'
    to: 'on'

#ENERGIZE by dimmer switch
#- action:
#  - data:
#      entity_id: script.energize
#    service: script.turn_on
#  alias: Energize by button
#  condition:
#    - condition: state
#      entity_id: sensor.kitchen_switch
#      state: '2_click'
#  id: energize_by_button
#  trigger:
#  - entity_id: sensor.philips_hue_switch_changed
#    platform: state

#Disable FADE_OFF and turn on lights
- action:
  - data:
      entity_id: script.fade_off
    service: script.turn_off
  - data:
      brightness: 186
      color_temp: 454
      entity_id: light.office
    service: light.turn_on
  - data:
      brightness: 186
      color_temp: 454
      entity_id: light.living_room
    service: light.turn_on
  - data:
      brightness: 186
      color_temp: 454
      entity_id: light.kitchen
    service: light.turn_on
  alias: Disable FADE_OFF
  condition:
    - condition: state
      entity_id: sensor.kitchen_switch
      state: '2_click'
  id: disable_fade_off
  trigger:
  - entity_id: sensor.philips_hue_switch_changed
    platform: state

#LIGHTS OFF by dimmer switch
- action:
  - data:
      entity_id: input_boolean.alarm_toggle
    service: input_boolean.turn_on
  - data:
      entity_id: script.fade_out
    service: script.turn_on
#  - data:
#      entity_id: group.all_lights
#    service: light.turn_off
  alias: Lights off by button
  condition:
    - condition: state
      entity_id: sensor.kitchen_switch
      state: '3_click'
  id: lights_off_by_button
  trigger:
  - entity_id: sensor.philips_hue_switch_changed
    platform: state

#LIGHTS unavailable
#- action:
#  - data:
#      entity_id: script.google_home_on
#    service: script.turn_on
#  - data:
#      entity_id: media_player.mary_and_max
#      message: "Some lights are unavailable"
#      language: "en-uk"
#    service: tts.google_say
#  - delay: 00:00:15
#  - data:
#      entity_id: script.google_home_off
#    service: script.turn_on
#  alias: Lights unavailable
#  condition:
#    - condition: sun
#      after: sunrise
#    - condition: sun
#      before: sunset
#  id: lights_unavailable
#  trigger:
#  - entity_id: binary_sensor.lights_unavailable
#    from: 'off'
#    platform: state
#    to: 'on'

#SET AWAY by wifi connection
- action:
  - data:
      entity_id: script.set_away
    service: script.turn_on
  alias: Set AWAY by location
  condition:
    - condition: state
      entity_id: input_boolean.disable_location
      state: 'off'
  id: set_away_by_location
  trigger:
  - entity_id: binary_sensor.everyone_away
    from: 'off'
    platform: state
    to: 'on'

#SET HOME by wifi connection
- action:
  - data:
      entity_id: script.set_home
    service: script.turn_on
  - delay: 00:00:02
  - data:
      entity_id: script.google_home_on
    service: script.turn_on
  - data:
      entity_id: media_player.mary_and_max
      message: "Welcome home"
      language: "en-uk"
    service: tts.google_say
  - delay: 00:00:15
  - data:
      entity_id: script.google_home_off
    service: script.turn_on
  alias: Set HOME by location
  condition:
    - condition: state
      entity_id: input_boolean.disable_location
      state: 'off'
  id: set_home_by_location
  trigger:
  - entity_id: binary_sensor.someone_at_home
    from: 'off'
    platform: state
    to: 'on'

#HEAT by calendar
- action:
  - data_template:
      temperature: '{{ states.calendar.thermostat.attributes.message | replace(" #heat","")
        | float}}'
      entity_id: climate.living_room
    service: climate.set_temperature
  alias: Temperature by calendar
  condition: []
  id: temperature_by_calendar
  trigger:
  - entity_id: calendar.thermostat
    from: 'off'
    platform: state
    to: 'on'

#NIGHT TOILET by dimmer switch
- action:
  - data:
      entity_id: script.night_toilet
    service: script.turn_on
  alias: Night toilet by button
  condition:
    - condition: state
      entity_id: sensor.kitchen_switch
      state: '1_click'
  id: night_toilet_by_button
  trigger:
  - entity_id: sensor.philips_hue_switch_changed
    platform: state

#GOOD NIGHT by dimmer switch
- action:
  - data:
      entity_id: input_boolean.alarm_toggle
    service: input_boolean.turn_on
  - data:
      entity_id: script.good_night
    service: script.turn_on
  alias: Good night by button
  condition:
    - condition: state
      entity_id: sensor.kitchen_switch
      state: '4_click'
  id: good_night_by_button
  trigger:
  - entity_id: sensor.philips_hue_switch_changed
    platform: state

# HOME ASSISTANT update notification
- action:
  - data:
      data:
        tag: update
      message: "Update for home assistant is ready"
      title: Update
    service: notify.notify
  alias: HASS update
  condition: []
  id: hass_update
  trigger:
  - platform: state
    entity_id: updater.updater

# HOME ASSISTANT update by voice
- action:
  - data:
      entity_id: script.google_home_on
    service: script.turn_on
  - data:
      entity_id: media_player.mary_and_max
      message: "Update for Home Assistant is ready"
      language: "en-uk"
    service: tts.google_say
  - delay: 00:00:15
  - data:
      entity_id: script.google_home_off
    service: script.turn_on
  alias: HASS update (voice)
  condition:
    - condition: sun
      after: sunrise
    - condition: sun
      before: sunset
  id: hass_update_voice
  trigger:
  - platform: state
    entity_id: updater.updater

#PLAYSTATION toggle ON by input
- action:
  - data:
      entity_id: script.remote_playstation
    service: script.turn_on
  - data:
      entity_id: input_boolean.television_toggle
    service: input_boolean.turn_off
  alias: Playstation ON by input
  condition:
    - condition: template
      value_template: '{{ states.remote.harmony_hub.attributes.current_activity == "PowerOff" }}'
  id: playstation_on_by_input
  trigger:
  - entity_id: input_boolean.playstation_toggle
    from: 'off'
    platform: state
    to: 'on'

#PLAYSTATION toggle ON by other
- action:
  - data:
      entity_id: input_boolean.television_toggle
    service: input_boolean.turn_off
  - data:
      entity_id: input_boolean.playstation_toggle
    service: input_boolean.turn_on
  alias: Playstation ON by other input
  condition:
    - condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity == "Play PS4" }}'
  id: playstation_on_by_other_input
  trigger:
  - entity_id: remote.harmony_hub
    platform: state

#PLAYSTATION toggle OFF by input
- action:
  - data:
      entity_id: remote.harmony_hub
    service: remote.turn_off
  alias: Playstation OFF by input
  condition:
    - condition: state
      entity_id: input_boolean.television_toggle
      state: 'off'
    - condition: template
      value_template: '{{ states.remote.harmony_hub.attributes.current_activity != "PowerOff" }}'
  id: playstation_off_by_input
  trigger:
  - entity_id: input_boolean.playstation_toggle
    from: 'on'
    platform: state
    to: 'off'

#TELEVISION toggle ON by input
- action:
  - data:
      entity_id: script.remote_television
    service: script.turn_on
  - data:
      entity_id: input_boolean.playstation_toggle
    service: input_boolean.turn_off
  alias: Television ON by input
  condition:
    - condition: template
      value_template: '{{ states.remote.harmony_hub.attributes.current_activity == "PowerOff" }}'
  id: television_on_by_input
  trigger:
  - entity_id: input_boolean.television_toggle
    from: 'off'
    platform: state
    to: 'on'

#TELEVISION toggle ON by other
- action:
  - data:
      entity_id: input_boolean.playstation_toggle
    service: input_boolean.turn_off
  - data:
      entity_id: input_boolean.television_toggle
    service: input_boolean.turn_on
  alias: Television ON by other input
  condition:
    - condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity == "Watch TV" }}'
  id: television_on_by_other_input
  trigger:
  - entity_id: remote.harmony_hub
    platform: state

#TELEVISION toggle OFF by input
- action:
  - data:
      entity_id: remote.harmony_hub
    service: remote.turn_off
  alias: Television OFF by input
  condition:
    - condition: state
      entity_id: input_boolean.playstation_toggle
      state: 'off'
    - condition: template
      value_template: '{{ states.remote.harmony_hub.attributes.current_activity != "PowerOff" }}'
  id: television_off_by_input
  trigger:
  - entity_id: input_boolean.television_toggle
    from: 'on'
    platform: state
    to: 'off'

#Turn off TELEVISION and PLAYSTATION when harmony is turned off by voice or remote
- action:
  - data:
      entity_id: input_boolean.playstation_toggle
    service: input_boolean.turn_off
  - data:
      entity_id: input_boolean.television_toggle
    service: input_boolean.turn_off
  alias: TV and PS4 OFF by other input
  condition:
    - condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity == "PowerOff" }}'
  id: television_playstation_off_by_other_input
  trigger:
  - entity_id: remote.harmony_hub
    platform: state

#WASHING MASHINE notification
- action:
  - data:
      data:
        tag: washing
      message: "The laundry is ready"
      title: Washing
    service: notify.notify
  - data:
      entity_id: script.google_home_on
    service: script.turn_on
  - data:
      entity_id: media_player.mary_and_max
      message: "The laundry is ready"
      language: "en-uk"
    service: tts.google_say
  - delay: 00:00:15
  - data:
      entity_id: script.google_home_off
    service: script.turn_on
  alias: Washing is done
  condition: []
  id: washing_is_done
  trigger:
  - entity_id: binary_sensor.washing
    from: 'on'
    platform: state
    to: 'off'
